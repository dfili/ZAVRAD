{"ast":null,"code":"var _jsxFileName = \"/Users/krmpi/PycharmProjects/FER/moonstone-CCS/client/src/components/Gantt/Gantt.js\";\nimport React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport $ from \"jquery\";\nimport { jQuery } from 'jquery';\nimport jsonTimestamp from '../../static/config.json';\nimport jsonAction from '../../static/action.json';\nimport jsonStateLevelScenario from '../../static/state_level_scenario.json';\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    const {\n      tasks\n    } = this.props;\n    gantt.init(this.ganttContainer);\n    gantt.parse(tasks);\n    this.configSetup();\n    var actionLabel = [];\n    var priorityList = [];\n    var keys = Object.keys(jsonAction.actions);\n    $.each(keys, function (i, val) {\n      actionLabel.push({\n        \"key\": i,\n        \"label\": val\n      });\n    }); //Here we are loading the actors from the json file, this is where you should add the resources and to process data here also\n\n    var players = null;\n    var playersLabel = [];\n    players = jsonStateLevelScenario.players;\n    var keys = Object.keys(players);\n    var cpt = 0;\n    $.each(players, function (i, val) {\n      $.each(val.actors, function (y, val2) {\n        playersLabel.push({\n          \"key\": cpt,\n          \"label\": i + \".\" + val2.name\n        });\n        cpt++;\n      });\n    });\n\n    for (let r in playersLabel) {\n      $('#holder').append($('<option>', {\n        value: r,\n        text: playersLabel[r][\"label\"]\n      }));\n    }\n\n    var taskConfigText = null;\n    var jsonConfig = null;\n    jsonConfig = jsonTimestamp;\n    console.log(jsonTimestamp.priority);\n    $.each(jsonTimestamp.priority, function (i, val) {\n      priorityList.push({\n        \"key\": i,\n        \"label\": val\n      });\n    });\n    taskConfigText = jsonTimestamp.task_text;\n\n    for (let r in priorityList) {\n      $('#priority').append($('<option>', {\n        value: r,\n        text: priorityList[r]\n      }));\n    }\n\n    console.log(this.state);\n    this.state = {\n      priority: priorityList,\n      actionLabel: actionLabel,\n      playersLabel: playersLabel\n    };\n  }\n\n  setZoom(value) {\n    switch (value) {\n      case 'Hours':\n        gantt.config.scale_unit = 'day';\n        gantt.config.date_scale = '%d %M';\n        gantt.config.scale_height = 60;\n        gantt.config.min_column_width = 30;\n        gantt.config.subscales = [{\n          unit: 'hour',\n          step: 1,\n          date: '%H'\n        }];\n        break;\n\n      case 'Days':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'week';\n        gantt.config.date_scale = '#%W';\n        gantt.config.subscales = [{\n          unit: 'day',\n          step: 1,\n          date: '%d %M'\n        }];\n        gantt.config.scale_height = 60;\n        break;\n\n      case 'Months':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'month';\n        gantt.config.date_scale = '%F';\n        gantt.config.scale_height = 60;\n        gantt.config.subscales = [{\n          unit: 'week',\n          step: 1,\n          date: '#%W'\n        }];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidUpdate() {\n    gantt.render();\n  }\n\n  setColumns() {\n    console.log(gantt.config.columns);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Task name\",\n      tree: true,\n      width: 150\n    }, {\n      name: \"start_date\",\n      label: \"Start time\",\n      align: \"center\",\n      resize: true,\n      width: 120\n    }, {\n      name: \"end_date\",\n      label: \"End date\",\n      align: \"center\",\n      resize: true,\n      width: 120\n    }, {\n      name: \"priority\",\n      label: \"Priority\",\n      height: 22,\n      type: \"select\",\n      map_to: \"priority\",\n      options: this.state.priorityList,\n      default_value: \"Low\"\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n  }\n\n  configSetup() {\n    gantt.config.wide_form = 1;\n    gantt.config.work_time = true;\n    gantt.config.order_branch = true;\n    gantt.config.autoscroll = true;\n    gantt.config.auto_scheduling = true;\n    gantt.config.autoscroll_speed = 100;\n    gantt.config.fit_tasks = true;\n    gantt.config.scale_unit = this.props.zoom.scale_unit;\n    gantt.config.duration_unit = \"hour\";\n    gantt.config.scale_height = 50;\n    gantt.config.min_column_width = 1000;\n    gantt.config.date_scale = this.props.zoom.date_scale;\n    gantt.config.open_tree_initially = true;\n    gantt.config.subscales = this.props.zoom.subscales;\n\n    gantt.templates.timeline_cell_class = function (task, date) {\n      if (!gantt.isWorkTime({\n        task: task,\n        date: date\n      })) return \"week_end\";\n      return \"\";\n    };\n\n    gantt.setWorkTime({\n      hours: [9, 17]\n    });\n    gantt.setWorkTime({\n      day: 6,\n      hours: false\n    });\n    gantt.setWorkTime({\n      day: 7,\n      hours: false\n    });\n    gantt.locale.labels[\"milestone\"] = \"Milestone\";\n    gantt.config.buttons_left = [\"dhx_save_btn\", \"dhx_cancel_btn\", \"milestone\"];\n    gantt.config.buttons_right = [\"dhx_delete_btn\"]; //addTodayMarker();\n  }\n\n  render() {\n    this.setColumns();\n    const {\n      zoom\n    } = this.props;\n    this.setZoom(zoom);\n    console.log(gantt.config.lightbox);\n    var task_sections = [{\n      name: \"description\",\n      height: 50,\n      map_to: \"text\",\n      type: \"textarea\",\n      focus: true\n    }, {\n      name: \"time\",\n      height: 72,\n      type: \"time\",\n      map_to: \"auto\"\n    }, {\n      name: \"holder\",\n      height: 50,\n      map_to: \"holder\",\n      type: \"select\",\n      options: this.state.playersLabel\n    }, {\n      name: \"action\",\n      height: 50,\n      map_to: \"action\",\n      type: \"select\",\n      options: this.state.actionLabel\n    }, {\n      name: \"priority\",\n      height: 50,\n      map_to: \"priority\",\n      type: \"select\",\n      options: this.state.priority\n    }];\n    gantt.config.lightbox.sections = task_sections;\n    gantt.locale.labels.section_template = \"Details\";\n    gantt.attachEvent(\"onBeforeLightbox\", function (id) {\n      var task = gantt.getTask(id); //console.log(task);\n      //task.my_template = \"<span id='title1'>Holder: </span>\"+ task.holder\n      //+\"<span id='title2'>Action: </span>\"+ task.action+\"<span id='title3'>Priority: </span>\"+ task.priority;\n\n      return true;\n    });\n    console.log(gantt.config.onBeforeLightbox);\n    gantt.refreshData();\n    gantt.render();\n    console.log(gantt.config.readonly);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/krmpi/PycharmProjects/FER/moonstone-CCS/client/src/components/Gantt/Gantt.js"],"names":["React","Component","gantt","$","jQuery","jsonTimestamp","jsonAction","jsonStateLevelScenario","Gantt","constructor","props","config","xml_date","tasks","init","ganttContainer","parse","configSetup","actionLabel","priorityList","keys","Object","actions","each","i","val","push","players","playersLabel","cpt","actors","y","val2","name","r","append","value","text","taskConfigText","jsonConfig","console","log","priority","task_text","state","setZoom","scale_unit","date_scale","scale_height","min_column_width","subscales","unit","step","date","shouldComponentUpdate","nextProps","zoom","componentDidUpdate","render","setColumns","columns","label","tree","width","align","resize","height","type","map_to","options","default_value","wide_form","work_time","order_branch","autoscroll","auto_scheduling","autoscroll_speed","fit_tasks","duration_unit","open_tree_initially","templates","timeline_cell_class","task","isWorkTime","setWorkTime","hours","day","locale","labels","buttons_left","buttons_right","lightbox","task_sections","focus","sections","section_template","attachEvent","id","getTask","onBeforeLightbox","refreshData","readonly","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport $ from \"jquery\";\nimport { jQuery } from 'jquery';\nimport jsonTimestamp from '../../static/config.json';\nimport jsonAction from '../../static/action.json';\nimport jsonStateLevelScenario from '../../static/state_level_scenario.json';\n\nexport default class Gantt extends Component {\n    constructor(props){\n        super(props);\n\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n        const { tasks } = this.props;\n        gantt.init(this.ganttContainer);\n        gantt.parse(tasks);\n        this.configSetup();\n\n        var actionLabel = [];\n        var priorityList = [];\n\n        var keys = Object.keys(jsonAction.actions);\n        $.each(keys, function(i, val) {\n            actionLabel.push({\"key\": i, \"label\": val})\n        });\n\n        //Here we are loading the actors from the json file, this is where you should add the resources and to process data here also\n        var players = null;\n        var playersLabel = [];\n\n        players = jsonStateLevelScenario.players;\n        var keys = Object.keys(players);\n        var cpt = 0;\n        $.each(players, function(i, val) {\n            $.each(val.actors, function(y, val2) {\n                playersLabel.push({\"key\": cpt, \"label\": i + \".\" + val2.name})\n                cpt++;\n            })\n        });\n        for(let r in playersLabel){$('#holder').append($('<option>',{value: r,text: playersLabel[r][\"label\"]}))}\n\n        var taskConfigText = null;\n        var jsonConfig = null;\n\n        jsonConfig = jsonTimestamp;\n        console.log(jsonTimestamp.priority);\n        $.each(jsonTimestamp.priority, function(i, val) {\n            priorityList.push({\"key\": i, \"label\": val})\n        });\n        taskConfigText = jsonTimestamp.task_text;\n        for(let r in priorityList){$('#priority').append($('<option>',{value: r,text: priorityList[r]}))}\n        console.log(this.state);\n\n        this.state = {\n            priority: priorityList,\n            actionLabel: actionLabel,\n            playersLabel: playersLabel\n        }\n    }\n\n    setZoom(value) {\n        switch (value) {\n            case 'Hours':\n                gantt.config.scale_unit = 'day';\n                gantt.config.date_scale = '%d %M';\n\n                gantt.config.scale_height = 60;\n                gantt.config.min_column_width = 30;\n                gantt.config.subscales = [\n                    { unit:'hour', step:1, date:'%H' }\n                ];\n            break;\n            case 'Days':\n                gantt.config.min_column_width = 70;\n                gantt.config.scale_unit = 'week';\n                gantt.config.date_scale = '#%W';\n                gantt.config.subscales = [\n                    { unit: 'day', step: 1, date: '%d %M' }\n                ];\n                gantt.config.scale_height = 60;\n            break;\n            case 'Months':\n                gantt.config.min_column_width = 70;\n                gantt.config.scale_unit = 'month';\n                gantt.config.date_scale = '%F';\n                gantt.config.scale_height = 60;\n                gantt.config.subscales = [\n                    { unit:'week', step:1, date:'#%W' }\n                ];\n            break;\n            default:\n            break;\n        }\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.zoom !== nextProps.zoom;\n    }\n\n    componentDidUpdate() {\n        gantt.render();\n    }\n\n    setColumns(){\n        console.log(gantt.config.columns)\n\n        gantt.config.columns =  [\n        {name:\"text\",       label:\"Task name\",  tree:true, width: 150 },\n        {name:\"start_date\", label:\"Start time\", align:\"center\", resize: true, width: 120 },\n        {name:\"end_date\",   label:\"End date\",   align:\"center\", resize: true, width: 120 },\n        {name:\"priority\",  label:\"Priority\", height:22, type:\"select\", map_to:\"priority\", options:this.state.priorityList, default_value:\"Low\"},\n        {name:\"add\",        label:\"\",           width:44 }\n    ];\n    }\n\n    configSetup() {\n      gantt.config.wide_form = 1;\n      gantt.config.work_time = true;\n      gantt.config.order_branch = true;\n      gantt.config.autoscroll = true;\n      gantt.config.auto_scheduling = true;\n      gantt.config.autoscroll_speed = 100;\n      gantt.config.fit_tasks = true;\n      gantt.config.scale_unit = this.props.zoom.scale_unit;\n      gantt.config.duration_unit = \"hour\";\n      gantt.config.scale_height = 50;\n      gantt.config.min_column_width = 1000;\n      gantt.config.date_scale = this.props.zoom.date_scale;\n      gantt.config.open_tree_initially = true;\n      gantt.config.subscales = this.props.zoom.subscales;\n      gantt.templates.timeline_cell_class = function(task, date){\n        if(!gantt.isWorkTime({task:task, date: date}))\n          return \"week_end\";\n        return \"\";\n      };\n      gantt.setWorkTime({\n        hours: [9,17]\n      })\n      gantt.setWorkTime({ day:6, hours:false });\n      gantt.setWorkTime({ day:7, hours:false });\n      gantt.locale.labels[\"milestone\"] = \"Milestone\";\n      gantt.config.buttons_left = [\"dhx_save_btn\", \"dhx_cancel_btn\", \"milestone\"];\n      gantt.config.buttons_right = [\"dhx_delete_btn\"];\n      //addTodayMarker();\n    }\n\n    render() {\n        this.setColumns();\n        const { zoom } = this.props;\n        this.setZoom(zoom);\n\n        console.log(gantt.config.lightbox);\n        var task_sections = [\n            { name: \"description\", height: 50, map_to: \"text\", type: \"textarea\", focus: true },\n            { name: \"time\", height: 72, type: \"time\", map_to: \"auto\" },\n            { name: \"holder\", height: 50, map_to:\"holder\", type:\"select\",options:this.state.playersLabel},\n            { name:\"action\", height: 50, map_to:\"action\", type:\"select\", options:this.state.actionLabel },\n            { name:\"priority\", height: 50, map_to:\"priority\", type:\"select\", options:this.state.priority }\n        ];\n\n        gantt.config.lightbox.sections = task_sections;\n        gantt.locale.labels.section_template = \"Details\";\n        gantt.attachEvent(\"onBeforeLightbox\", function(id) {\n            var task = gantt.getTask(id);\n            //console.log(task);\n            //task.my_template = \"<span id='title1'>Holder: </span>\"+ task.holder\n            //+\"<span id='title2'>Action: </span>\"+ task.action+\"<span id='title3'>Priority: </span>\"+ task.priority;\n            return true;\n        });\n\n        console.log(gantt.config.onBeforeLightbox);\n\n        gantt.refreshData();\n        gantt.render();\n\n        console.log(gantt.config.readonly);\n\n        return (\n            <div\n                ref={(input) => { this.ganttContainer = input }}\n                style={{ width: '100%', height: '100%' }}\n            >\n            </div>\n        );\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}