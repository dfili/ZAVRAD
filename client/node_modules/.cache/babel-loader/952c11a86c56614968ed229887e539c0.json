{"ast":null,"code":"var _jsxFileName = \"/Users/krmpi/PycharmProjects/FER/moonstone-CCS/client/src/components/Gantt/Gantt.js\";\nimport React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport $ from \"jquery\";\nimport { jQuery } from 'jquery';\nimport jsonTimestamp from '../../static/config.json';\nimport jsonAction from '../../static/action.json';\nimport jsonStateLevelScenario from '../../static/state_level_scenario.json';\nexport default class Gantt extends Component {\n  constructor(props) {\n    super(props);\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    const {\n      tasks\n    } = this.props;\n    gantt.init(this.ganttContainer);\n    gantt.parse(tasks);\n    this.configSetup(); //Here we are loading the action from the action.json file\n\n    var actionLoaded = null;\n    var actionLabelz = [];\n    var priorityz;\n    actionLoaded = jsonAction.actions;\n    var keys = Object.keys(actionLoaded);\n    $.each(keys, function (i, val) {\n      actionLabelz.push({\n        \"key\": i,\n        \"label\": val\n      });\n    }); //Here we are loading the actors from the json file, this is where you should add the resources and to process data here also\n\n    var players = null;\n    var playersLabelz = [];\n    players = jsonStateLevelScenario.players;\n    var keys = Object.keys(players);\n    var cpt = 0;\n    $.each(players, function (i, val) {\n      $.each(val.actors, function (y, val2) {\n        playersLabelz.push({\n          \"key\": cpt,\n          \"label\": i + \".\" + val2.name\n        });\n        cpt++;\n      });\n    });\n\n    for (let r in playersLabelz) {\n      $('#holder').append($('<option>', {\n        value: r,\n        text: playersLabelz[r][\"label\"]\n      }));\n    }\n\n    var taskConfigText = null;\n    var jsonConfig = null;\n    jsonConfig = jsonTimestamp;\n    priorityz = jsonTimestamp.priority;\n    taskConfigText = jsonTimestamp.task_text;\n\n    for (let r in priorityz) {\n      $('#priority').append($('<option>', {\n        value: r,\n        text: priorityz[r]\n      }));\n    }\n    /*var task_sections = [\n        { name: \"description\", height: 50, map_to: \"text\", type: \"textarea\" },\n        { name: \"time\", height: 72, type: \"time\", map_to: \"auto\" },\n        { name: \"holder\", height: 50, map_to:\"holder\", type:\"select\",options:playersLabel},\n        { name:\"action\", height: 50, type:\"select\", options:actionLabel },\n        { name:\"priority\", height: 50, type:\"select\", options:priority }\n    ];*/\n    //this.setState({priority:priorityz, actionLabel:actionLabelz, playersLabel:playersLabelz}, () => console.log(this.state));\n    //console.log(priority);\n\n\n    console.log(this.state);\n    this.state = {\n      priority: priorityz,\n      actionLabel: actionLabelz,\n      playersLabel: playersLabelz\n    };\n  }\n\n  componentDidMount() {//console.log(playersLabelz);\n    //console.log(this.state);\n\n    /*gantt.attachEvent(\"onBeforeLightbox\", function(id) {\n        var task = gantt.getTask(id);\n        gantt.config.lightbox.sections = task_sections;\n        console.log(task_sections);\n        if(task.$new){\n            gantt._dhtmlx_confirm({\n                message:\"Create task?\",\n                title:\"Create task?\",\n                callback: function(res){\n                    console.log(\"res= \" + res);\n                    if(res){\n                        //..apply values\n                        delete task.$new;\n                        gantt.addTask(task);\n                    }else{\n                        gantt.deleteTask(task.id);\n                    }\n                }\n            });\n            return false;\n        }\n        return true;\n    });*/\n  }\n\n  render() {\n    /*if (this.state.actionLabel == null){\n        return null;\n    }*/\n    this.setColumns();\n    const {\n      zoom\n    } = this.props;\n    this.setZoom(zoom);\n    var task_sections = [{\n      name: \"description\",\n      height: 50,\n      map_to: \"text\",\n      type: \"textarea\"\n    }, {\n      name: \"time\",\n      height: 72,\n      type: \"time\",\n      map_to: \"auto\"\n    }, {\n      name: \"holder\",\n      height: 50,\n      map_to: \"holder\",\n      type: \"select\",\n      options: this.state.playersLabel\n    }, {\n      name: \"action\",\n      height: 50,\n      type: \"select\",\n      options: this.state.actionLabel\n    }, {\n      name: \"priority\",\n      height: 50,\n      type: \"select\",\n      options: this.state.priority\n    }];\n    console.log(task_sections);\n    gantt.config.lightbox.sections = task_sections;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    });\n  }\n\n  setZoom(value) {\n    switch (value) {\n      case 'Hours':\n        gantt.config.scale_unit = 'day';\n        gantt.config.date_scale = '%d %M';\n        gantt.config.scale_height = 60;\n        gantt.config.min_column_width = 30;\n        gantt.config.subscales = [{\n          unit: 'hour',\n          step: 1,\n          date: '%H'\n        }];\n        break;\n\n      case 'Days':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'week';\n        gantt.config.date_scale = '#%W';\n        gantt.config.subscales = [{\n          unit: 'day',\n          step: 1,\n          date: '%d %M'\n        }];\n        gantt.config.scale_height = 60;\n        break;\n\n      case 'Months':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'month';\n        gantt.config.date_scale = '%F';\n        gantt.config.scale_height = 60;\n        gantt.config.subscales = [{\n          unit: 'week',\n          step: 1,\n          date: '#%W'\n        }];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidUpdate() {\n    gantt.render();\n  }\n\n  setColumns() {\n    console.log(gantt.config.columns);\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Task name\",\n      tree: true,\n      width: 150\n    }, {\n      name: \"start_date\",\n      label: \"Start time\",\n      align: \"center\",\n      resize: true,\n      width: 120\n    }, {\n      name: \"end_date\",\n      label: \"End date\",\n      align: \"center\",\n      resize: true,\n      width: 120\n    }, //{name:\"priority\",    height:22, type:\"select\",   map_to:\"priority\", options:priority, default_value:\"Low\"},\n    {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n  }\n\n  configSetup() {\n    gantt.config.wide_form = 1;\n    gantt.config.work_time = true;\n    gantt.config.order_branch = true;\n    gantt.config.autoscroll = true;\n    gantt.config.auto_scheduling = true;\n    gantt.config.autoscroll_speed = 100;\n    gantt.config.fit_tasks = true;\n    gantt.config.scale_unit = this.props.zoom.scale_unit;\n    gantt.config.duration_unit = \"hour\";\n    gantt.config.scale_height = 50;\n    gantt.config.min_column_width = 1000;\n    gantt.config.date_scale = this.props.zoom.date_scale;\n    gantt.config.open_tree_initially = true;\n    gantt.config.subscales = this.props.zoom.subscales;\n\n    gantt.templates.timeline_cell_class = function (task, date) {\n      if (!gantt.isWorkTime({\n        task: task,\n        date: date\n      })) return \"week_end\";\n      return \"\";\n    };\n\n    gantt.setWorkTime({\n      hours: [9, 17]\n    });\n    gantt.setWorkTime({\n      day: 6,\n      hours: false\n    });\n    gantt.setWorkTime({\n      day: 7,\n      hours: false\n    });\n    gantt.locale.labels[\"milestone\"] = \"Milestone\";\n    gantt.config.buttons_left = [\"dhx_save_btn\", \"dhx_cancel_btn\", \"milestone\"];\n    gantt.config.buttons_right = [\"dhx_delete_btn\"]; //addTodayMarker();\n  }\n\n}","map":{"version":3,"sources":["/Users/krmpi/PycharmProjects/FER/moonstone-CCS/client/src/components/Gantt/Gantt.js"],"names":["React","Component","gantt","$","jQuery","jsonTimestamp","jsonAction","jsonStateLevelScenario","Gantt","constructor","props","config","xml_date","tasks","init","ganttContainer","parse","configSetup","actionLoaded","actionLabelz","priorityz","actions","keys","Object","each","i","val","push","players","playersLabelz","cpt","actors","y","val2","name","r","append","value","text","taskConfigText","jsonConfig","priority","task_text","console","log","state","actionLabel","playersLabel","componentDidMount","render","setColumns","zoom","setZoom","task_sections","height","map_to","type","options","lightbox","sections","input","width","scale_unit","date_scale","scale_height","min_column_width","subscales","unit","step","date","shouldComponentUpdate","nextProps","componentDidUpdate","columns","label","tree","align","resize","wide_form","work_time","order_branch","autoscroll","auto_scheduling","autoscroll_speed","fit_tasks","duration_unit","open_tree_initially","templates","timeline_cell_class","task","isWorkTime","setWorkTime","hours","day","locale","labels","buttons_left","buttons_right"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport $ from \"jquery\";\nimport { jQuery } from 'jquery';\nimport jsonTimestamp from '../../static/config.json';\nimport jsonAction from '../../static/action.json';\nimport jsonStateLevelScenario from '../../static/state_level_scenario.json';\n\nexport default class Gantt extends Component {\n    constructor(props){\n        super(props);\n\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n        const { tasks } = this.props;\n        gantt.init(this.ganttContainer);\n        gantt.parse(tasks);\n        this.configSetup();\n\n        //Here we are loading the action from the action.json file\n  var actionLoaded = null;\n    var actionLabelz = [];\n    var priorityz;\n\n    actionLoaded = jsonAction.actions;\n    var keys = Object.keys(actionLoaded);\n      $.each(keys, function(i, val) {\n        actionLabelz.push({\"key\": i, \"label\": val})\n      });\n\n    //Here we are loading the actors from the json file, this is where you should add the resources and to process data here also\n    var players = null;\n    var playersLabelz = [];\n\n    players = jsonStateLevelScenario.players;\n    var keys = Object.keys(players);\n      var cpt = 0;\n      $.each(players, function(i, val) {\n        $.each(val.actors, function(y, val2) {\n          playersLabelz.push({\"key\": cpt, \"label\": i + \".\" + val2.name})\n          cpt++;\n        })\n      });\n      for(let r in playersLabelz){$('#holder').append($('<option>',{value: r,text: playersLabelz[r][\"label\"]}))}\n\n    var taskConfigText = null;\n    var jsonConfig = null;\n\n    jsonConfig = jsonTimestamp;\n    priorityz = jsonTimestamp.priority;\n    taskConfigText = jsonTimestamp.task_text;\n    for(let r in priorityz){$('#priority').append($('<option>',{value: r,text: priorityz[r]}))}\n\n        /*var task_sections = [\n            { name: \"description\", height: 50, map_to: \"text\", type: \"textarea\" },\n            { name: \"time\", height: 72, type: \"time\", map_to: \"auto\" },\n            { name: \"holder\", height: 50, map_to:\"holder\", type:\"select\",options:playersLabel},\n            { name:\"action\", height: 50, type:\"select\", options:actionLabel },\n            { name:\"priority\", height: 50, type:\"select\", options:priority }\n        ];*/\n\n     //this.setState({priority:priorityz, actionLabel:actionLabelz, playersLabel:playersLabelz}, () => console.log(this.state));\n     //console.log(priority);\n     console.log(this.state);\n\n        this.state = {\n            priority: priorityz,\n            actionLabel: actionLabelz,\n            playersLabel: playersLabelz\n        }\n    }\n\n    componentDidMount() {\n\n     //console.log(playersLabelz);\n     //console.log(this.state);\n\n        /*gantt.attachEvent(\"onBeforeLightbox\", function(id) {\n            var task = gantt.getTask(id);\n            gantt.config.lightbox.sections = task_sections;\n            console.log(task_sections);\n            if(task.$new){\n                gantt._dhtmlx_confirm({\n                    message:\"Create task?\",\n                    title:\"Create task?\",\n                    callback: function(res){\n                        console.log(\"res= \" + res);\n                        if(res){\n                            //..apply values\n                            delete task.$new;\n                            gantt.addTask(task);\n                        }else{\n                            gantt.deleteTask(task.id);\n                        }\n                    }\n                });\n                return false;\n            }\n            return true;\n        });*/\n    }\n\n    render() {\n        /*if (this.state.actionLabel == null){\n            return null;\n        }*/\n\n        this.setColumns();\n        const { zoom } = this.props;\n        this.setZoom(zoom);\n\n        var task_sections = [\n            { name: \"description\", height: 50, map_to: \"text\", type: \"textarea\" },\n            { name: \"time\", height: 72, type: \"time\", map_to: \"auto\" },\n            { name: \"holder\", height: 50, map_to:\"holder\", type:\"select\",options:this.state.playersLabel},\n            { name:\"action\", height: 50, type:\"select\", options:this.state.actionLabel },\n            { name:\"priority\", height: 50, type:\"select\", options:this.state.priority }\n        ];\n\n        console.log(task_sections);\n\n        gantt.config.lightbox.sections = task_sections;\n        \n        return (\n            <div\n                ref={(input) => { this.ganttContainer = input }}\n                style={{ width: '100%', height: '100%' }}\n            >\n            </div>\n        );\n    }\n\n    setZoom(value) {\n        switch (value) {\n            case 'Hours':\n                gantt.config.scale_unit = 'day';\n                gantt.config.date_scale = '%d %M';\n\n                gantt.config.scale_height = 60;\n                gantt.config.min_column_width = 30;\n                gantt.config.subscales = [\n                    { unit:'hour', step:1, date:'%H' }\n                ];\n            break;\n            case 'Days':\n                gantt.config.min_column_width = 70;\n                gantt.config.scale_unit = 'week';\n                gantt.config.date_scale = '#%W';\n                gantt.config.subscales = [\n                    { unit: 'day', step: 1, date: '%d %M' }\n                ];\n                gantt.config.scale_height = 60;\n            break;\n            case 'Months':\n                gantt.config.min_column_width = 70;\n                gantt.config.scale_unit = 'month';\n                gantt.config.date_scale = '%F';\n                gantt.config.scale_height = 60;\n                gantt.config.subscales = [\n                    { unit:'week', step:1, date:'#%W' }\n                ];\n            break;\n            default:\n            break;\n        }\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.zoom !== nextProps.zoom;\n    }\n\n    componentDidUpdate() {\n        gantt.render();\n    }\n\n    setColumns(){\n        console.log(gantt.config.columns)\n\n        gantt.config.columns =  [\n        {name:\"text\",       label:\"Task name\",  tree:true, width: 150 },\n        {name:\"start_date\", label:\"Start time\", align:\"center\", resize: true, width: 120 },\n        {name:\"end_date\",   label:\"End date\",   align:\"center\", resize: true, width: 120 },\n        //{name:\"priority\",    height:22, type:\"select\",   map_to:\"priority\", options:priority, default_value:\"Low\"},\n        {name:\"add\",        label:\"\",           width:44 }\n    ];\n    }\n\n    configSetup() {\n      gantt.config.wide_form = 1;\n      gantt.config.work_time = true;\n      gantt.config.order_branch = true;\n      gantt.config.autoscroll = true;\n      gantt.config.auto_scheduling = true;\n      gantt.config.autoscroll_speed = 100;\n      gantt.config.fit_tasks = true;\n      gantt.config.scale_unit = this.props.zoom.scale_unit;\n      gantt.config.duration_unit = \"hour\";\n      gantt.config.scale_height = 50;\n      gantt.config.min_column_width = 1000;\n      gantt.config.date_scale = this.props.zoom.date_scale;\n      gantt.config.open_tree_initially = true;\n      gantt.config.subscales = this.props.zoom.subscales;\n      gantt.templates.timeline_cell_class = function(task, date){\n        if(!gantt.isWorkTime({task:task, date: date}))\n          return \"week_end\";\n        return \"\";\n      };\n      gantt.setWorkTime({\n        hours: [9,17]\n      })\n      gantt.setWorkTime({ day:6, hours:false });\n      gantt.setWorkTime({ day:7, hours:false });\n      gantt.locale.labels[\"milestone\"] = \"Milestone\";\n      gantt.config.buttons_left = [\"dhx_save_btn\", \"dhx_cancel_btn\", \"milestone\"];\n      gantt.config.buttons_right = [\"dhx_delete_btn\"];\n      //addTodayMarker();\n    }\n}"]},"metadata":{},"sourceType":"module"}